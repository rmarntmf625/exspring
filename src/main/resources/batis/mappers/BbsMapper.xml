<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.hit.myapp.bbs.BbsDao">
    <resultMap type="BbsVo" id="bbsMap">
        <id column="bbs_no" property="bbsNo" />
        <result column="bbs_title" property="bbsTitle" />
        <result column="bbs_content" property="bbsContent" />
        <result column="bbs_writer" property="bbsWriter" />
        <result column="bbs_reg_date" property="bbsRegDate" />
        <result column="bbs_count" property="bbsCount" />
		<!-- 조인 결과 다수의 객체(리스트)로 담아여 하는 컬럼값들은 collection 사용 -->
        <collection property="attList" ofType="AttachVo">
            <id column="att_no" property="attNo" />
            <result column="att_org_name" property="attOrgName" />
            <result column="att_new_name" property="attNewName" />
            <result column="att_bbs_no" property="attBbsNo" />
        </collection>
    </resultMap>
    
<!-- useGeneratedKeys="true" 를 사용하여  -->
<!-- (AUTO_INCREMENT에 의해서) 자동생성된 PK(기본키) 값을  -->
<!-- 파라미터 객체의 keyProperty에 지정된 속성(변수)에 저장 가능 --> 
    <insert id="insert" parameterType="BbsVo" useGeneratedKeys="true" keyProperty="bbsNo" >
        INSERT INTO bbs 
		( bbs_title, bbs_content, bbs_writer )
		VALUES ( #{bbsTitle}, #{bbsContent}, #{bbsWriter} )
    </insert>
    
<!--     다수의 SQL문에서 공통적으로 사용할 부분을 별도의 sql 엘리먼트로 선언하고 고유한 id를 부여 -->
<!-- 필요한 곳에서 inculde를 사용하여 포함시켜서 사용 -->
    <sql id="searchSql">       
<!--         trim내부에 내용이 있는 경우에만 앞에 where을 붙인다. -->
<!-- 내용의 시작이 and또는 or인 경우, and 또는 or을 제거 -->
        <trim prefix="where" prefixOverrides="and|or">
            
		<!-- #{searchType} 값이 'title' 이면 내부의 내용이 SQL문에 포함된다  -->
        <if test="searchType=='title' or searchType=='total'"> 
	        WHERE bbs_title like concat('%',#{searchWord},'%')      
        </if>
        <!-- #{searchType} 값이 'content' 이면 내부의 내용이 SQL문에 포함된다  -->
        <if test="searchType=='content' or searchType=='total'">
        OR	WHERE bbs_content like concat('%',#{searchWord},'%')
        </if>
        
        </trim>
    </sql>
    
    <select id="selectList" resultType="BbsVo" >
        SELECT bbs_no, bbs_title, bbs_writer, bbs_reg_date, bbs_count 
        FROM bbs
<!--         id가 "searchSql" sql 엘리먼트의 내용을 이곳에 추가 -->
        <include refid="searchSql"/>
        ORDER BY bbs_reg_date DESC
        LIMIT #{firstRecordIndex} , #{size}
    </select>
    
    
    <select id="selectCount" resultType="int" >
        SELECT count(*) FROM bbs
        <!--         trim내부에 내용이 있는 경우에만 앞에 where을 붙인다. -->
<!-- 내용의 시작이 and또는 or인 경우, and 또는 or을 제거 -->
        <trim prefix="where" prefixOverrides="and|or">
            
		<!-- #{searchType} 값이 'title' 이면 내부의 내용이 SQL문에 포함된다  -->
        <if test="searchType=='title' or searchType=='total'"> 
	        WHERE bbs_title like concat('%',#{searchWord},'%')      
        </if>
        <!-- #{searchType} 값이 'content' 이면 내부의 내용이 SQL문에 포함된다  -->
        <if test="searchType=='content' or searchType=='total'">
        OR	WHERE bbs_content like concat('%',#{searchWord},'%')
        </if>
        
        </trim>
    </select>

    
    <select id="select" parameterType="int" resultMap="bbsMap" >
        SELECT bbs_no, bbs_title, bbs_content, bbs_writer, bbs_reg_date, bbs_count
				,att_no, att_org_name, att_new_name, att_bbs_no
		FROM bbs LEFT OUTER JOIN attach ON bbs_no = att_bbs_no
		WHERE bbs_no =  #{bbsNo}
    </select>
    <update id="update" parameterType="BbsVo" >
        UPDATE bbs 
        SET bbs_title = #{bbsTitle}, bbs_content = #{bbsContent}
        WHERE bbs_no = #{bbsNo} and bbs_writer = #{bbsWriter}
    </update>
    <delete id="delete" parameterType="BbsVo" >
        DELETE FROM bbs
        WHERE bbs_no = #{bbsNo} and bbs_writer = #{bbsWriter}
    </delete>
</mapper>
  








